/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Events, EventsInterface } from "../Events";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200104038038062001040833981810160405281019062000037919062000421565b80620000586200004c620000bf60201b60201c565b620000c760201b60201c565b62000069816200018b60201b60201c565b506040518060400160405280601681526020017f596f75724a757374696365204576656e74205265706f0000000000000000000081525060029080519060200190620000b7929190620002e8565b5050620007a0565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040516020016200019c9062000530565b604051602081830303815290604052805190602001208173ffffffffffffffffffffffffffffffffffffffff166310055c1d6040518163ffffffff1660e01b815260040160006040518083038186803b158015620001f957600080fd5b505afa1580156200020e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200023991906200044d565b6040516020016200024b919062000517565b6040516020818303038152906040528051906020012014620002a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029b9062000547565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054620002f69062000659565b90600052602060002090601f0160209004810192826200031a576000855562000366565b82601f106200033557805160ff191683800117855562000366565b8280016001018555821562000366579182015b828111156200036557825182559160200191906001019062000348565b5b50905062000375919062000379565b5090565b5b80821115620003945760008160009055506001016200037a565b5090565b6000620003af620003a98462000592565b62000569565b905082815260208101848484011115620003c857600080fd5b620003d584828562000623565b509392505050565b600081519050620003ee8162000786565b92915050565b600082601f8301126200040657600080fd5b81516200041884826020860162000398565b91505092915050565b6000602082840312156200043457600080fd5b60006200044484828501620003dd565b91505092915050565b6000602082840312156200046057600080fd5b600082015167ffffffffffffffff8111156200047b57600080fd5b6200048984828501620003f4565b91505092915050565b60006200049f82620005c8565b620004ab8185620005e4565b9350620004bd81856020860162000623565b80840191505092915050565b6000620004d8601483620005d3565b9150620004e58262000734565b602082019050919050565b6000620004ff600583620005e4565b91506200050c826200075d565b600582019050919050565b600062000525828462000492565b915081905092915050565b60006200053d82620004f0565b9150819050919050565b600060208201905081810360008301526200056281620004c9565b9050919050565b60006200057562000588565b90506200058382826200068f565b919050565b6000604051905090565b600067ffffffffffffffff821115620005b057620005af620006f4565b5b620005bb8262000723565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000620005fc8262000603565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200064357808201518184015260208101905062000626565b8381111562000653576000848401525b50505050565b600060028204905060018216806200067257607f821691505b60208210811415620006895762000688620006c5565b5b50919050565b6200069a8262000723565b810181811067ffffffffffffffff82111715620006bc57620006bb620006f4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f496e76616c69642048756220436f6e7472616374000000000000000000000000600082015250565b7f594a487562000000000000000000000000000000000000000000000000000000600082015250565b6200079181620005ef565b81146200079d57600080fd5b50565b61089080620007b06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde03146100675780634b67f6af14610085578063715018a6146100a35780638da5cb5b146100ad57806395d89b41146100cb578063f2fde38b146100e9575b600080fd5b61006f610105565b60405161007c9190610676565b60405180910390f35b61008d610193565b60405161009a9190610676565b60405180910390f35b6100ab610225565b005b6100b56102ad565b6040516100c2919061065b565b60405180910390f35b6100d3610354565b6040516100e09190610676565b60405180910390f35b61010360048036038101906100fe919061057b565b61038d565b005b6002805461011290610759565b80601f016020809104026020016040519081016040528092919081815260200182805461013e90610759565b801561018b5780601f106101605761010080835404028352916020019161018b565b820191906000526020600020905b81548152906001019060200180831161016e57829003601f168201915b505050505081565b6060600280546101a290610759565b80601f01602080910402602001604051908101604052809291908181526020018280546101ce90610759565b801561021b5780601f106101f05761010080835404028352916020019161021b565b820191906000526020600020905b8154815290600101906020018083116101fe57829003601f168201915b5050505050905090565b61022d610485565b73ffffffffffffffffffffffffffffffffffffffff1661024b6102ad565b73ffffffffffffffffffffffffffffffffffffffff16146102a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610298906106b8565b60405180910390fd5b6102ab600061048d565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031757600080fd5b505afa15801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f91906105a4565b905090565b6040518060400160405280600681526020017f594a5f455654000000000000000000000000000000000000000000000000000081525081565b610395610485565b73ffffffffffffffffffffffffffffffffffffffff166103b36102ad565b73ffffffffffffffffffffffffffffffffffffffff1614610409576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610400906106b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047090610698565b60405180910390fd5b6104828161048d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061056081610843565b92915050565b60008151905061057581610843565b92915050565b60006020828403121561058d57600080fd5b600061059b84828501610551565b91505092915050565b6000602082840312156105b657600080fd5b60006105c484828501610566565b91505092915050565b6105d6816106f4565b82525050565b60006105e7826106d8565b6105f181856106e3565b9350610601818560208601610726565b61060a816107ba565b840191505092915050565b60006106226026836106e3565b915061062d826107cb565b604082019050919050565b60006106456020836106e3565b91506106508261081a565b602082019050919050565b600060208201905061067060008301846105cd565b92915050565b6000602082019050818103600083015261069081846105dc565b905092915050565b600060208201905081810360008301526106b181610615565b9050919050565b600060208201905081810360008301526106d181610638565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006106ff82610706565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610744578082015181840152602081019050610729565b83811115610753576000848401525b50505050565b6000600282049050600182168061077157607f821691505b602082108114156107855761078461078b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61084c816106f4565b811461085757600080fd5b5056fea2646970667358221220e52f49ca82fa7dd08f688c74eb42345018d586754e180fa39670bc5d12e9d4a564736f6c63430008040033";

type EventsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Events__factory extends ContractFactory {
  constructor(...args: EventsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Events";
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Events> {
    return super.deploy(hub, overrides || {}) as Promise<Events>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): Events {
    return super.attach(address) as Events;
  }
  connect(signer: Signer): Events__factory {
    return super.connect(signer) as Events__factory;
  }
  static readonly contractName: "Events";
  public readonly contractName: "Events";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventsInterface {
    return new utils.Interface(_abi) as EventsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Events {
    return new Contract(address, _abi, signerOrProvider) as Events;
  }
}
